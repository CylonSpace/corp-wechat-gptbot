name: 部署GPT_BOT到远程服务器

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
on:
  # 手动触发事件
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  LOG_LEVEL: debug

jobs:
  # 检查并且安装Dokcer环境
  installAndCheckDockerEnv:
    runs-on: ubuntu-latest
    steps:
    - name: 检查Docker是否安装
      id: check-docker
      uses: appleboy/ssh-action@v0.1.9
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_SSH_USERNAME }}
        password: ${{ secrets.VPS_SSH_PASSWD }}
        port: ${{ secrets.VPS_SSH_PORT}}
        script: |
          if command -v docker > /dev/null 2>&1; then
            echo "Docker is already installed on the remote server"
            echo "::set-output name=installed::true"
            echo "envCheckRes=true" >> $GITHUB_ENV
          else
            echo "Docker is not installed on the remote server"
            echo "::set-output name=installed::false"
          fi        
    - name: 安装Docker
      id: install-docker
      if: steps.check-docker.outputs.installed == 'false'
      uses: appleboy/ssh-action@v0.1.9
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_SSH_USERNAME }}
        password: ${{ secrets.VPS_SSH_PASSWD }}
        port: ${{ secrets.VPS_SSH_PORT}}
        script: |
          sudo apt update
          sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          sudo apt install -y docker-ce docker-ce-cli containerd.io
          sudo systemctl start docker
          sudo usermod -aG docker $USER
          echo "envCheckRes=true" >> $GITHUB_ENV           
  deployDockerToRemote:
    needs: [installAndCheckDockerEnv]
    if: ${{ envCheckRes == 'true' }} 
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    steps:
      - name: 部署Docker Compose到服务器 ssh cmd
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_SSH_USERNAME }}
          key: ${{ secrets.VPS_SSH_SECRET }}
          port: ${{ secrets.VPS_SSH_PORT}}
          script: |
            docker stop gpt-webot 
            docker rm gpt-webot
            docker login ghcr.io -u ${{ secrets.DOCKER_DEPLOY_USERNAME }} -p ${{ secrets.DOCKER_DEPLOY_TOKEN }} 
            docker pull ghcr.io/baiyz0825/corp-webot:main
            docker run -d --name=gpt-webot --net=host -p 50008:50008 -v /home/byz/gpt/config:/apps/config -v /home/byz/gpt/db:/apps/db -v /home/byz/gpt/logs:/apps/logs --restart=always ghcr.io/baiyz0825/corp-webot:main
            docker ps -al | grep gpt-webot
